DROP TABLE IF EXISTS LIVRO, GENERO, AUTOR, EMPRESTIMO, CLIENTE, FUNCIONARIO,
FUNC_ATENDENTE, FUNC_ADMINISTRADOR, FUNC_AJUDANTE, FORNECEDOR, FORNECEDOR_ENDERECO,
PRATELEIRA, SETORES, COMPOE, SETOR_DE, ESCREVE_LIVROS_DE, ESCRITO_POR, LIVRO_DE,
ENCOMENDA_DE, REGISTRA, REQUER_AJUDA;

CREATE TABLE LIVRO(
Id INTEGER,
Titulo CHAR (50),
Autor CHAR (50),
Genero CHAR (50),
PRIMARY KEY (Id),
FOREIGN KEY (Genero) REFERENCES GENERO (Nome)
);

CREATE TABLE GENERO (
Nome CHAR (50),
Descricao CHAR (50),
Area CHAR (50),
PRIMARY KEY (Nome)
);

CREATE TABLE AUTOR(
Id INTEGER,
Nome CHAR (50),
Genero CHAR (50),
PRIMARY KEY (Id),
FOREIGN KEY (Nome) REFERENCES GENERO (Nome)
);

CREATE TABLE EMPRÃ‰STIMO(
Codigo INTEGER,
Id_cliente INTEGER,
Id_livro INTEGER,
Data_emprestimo INTEGER,
Data_devolucao INTEGER,
PRIMARY KEY (Codigo),
FOREIGN KEY (Id_cliente) REFERENCES Cliente (Registro),
FOREIGN KEY (Id_livro) REFERENCES Livro (Id)
);

CREATE TABLE CLIENTE(
Registro INTEGER,
Nome CHAR (50),
Telefone INTEGER,
PRIMARY KEY (Registro)
);

CREATE TABLE FUNCIONARIO(
Id INTEGER,
Nome CHAR (50),
Endereco INTEGER,
PRIMARY KEY (Id)
);

CREATE TABLE FUNC_ATENDENTE(
Id INTEGER,
Nome CHAR (50),
Endereco INTEGER,
PRIMARY KEY (Id),
FOREIGN KEY (Id) REFERENCES FUNCIONARIO (Id) ON DELETE CASCADE
);

CREATE TABLE FUNC_AJUDANTE(
Id INTEGER,
Nome CHAR (50),
Endereco INTEGER,
Id_setor INTEGER,
Id_prateleira INTEGER,
PRIMARY KEY (Id),
FOREIGN KEY (Id) REFERENCES FUNCIONARIO (Id) ON DELETE CASCADE,
FOREIGN KEY (Setor) REFERENCES COMPOE (Id_setor),
FOREIGN KEY (Prateleira) REFERENCES PRATELEIRA (Id_prateleira)
);

CREATE TABLE FUNC_ADMINISTRADOR(
Id INTEGER,
Nome CHAR (50),
Endereco INTEGER,
PRIMARY KEY (Id),
FOREIGN KEY (Id) REFERENCES FUNCIONARIO (Id) ON DELETE CASCADE
);

CREATE TABLE FORNECEDOR(
Id INTEGER,
Nome CHAR (50),
CEP INTEGER,
PRIMARY KEY (Id)
);
CREATE TABLE FORNECEDOR_ENDERECO(
CEP INTEGER,
Id INTEGER,
UF CHAR (2),
Cidade CHAR (20),
Rua CHAR (50),
Numero INTEGER,
PRIMARY KEY (CEP, Id),
FOREIGN KEY (Id) REFERENCES FORNECEDOR (Id) ON DELETE CASCADE
);
CREATE TABLE PRATELEIRA(
Id INTEGER,
Genero CHAR (50),
Qtd_livros INTEGER,
PRIMARY KEY (Id),
FOREIGN KEY (Genero) REFERENCES GENERO (Nome)

);
CREATE TABLE SETORES(
Id INTEGER,
Prateleira INTEGER,
Func_responsavel INTEGER,
PRIMARY KEY (Id),
FOREIGN KEY (Prateleira) REFERENCES PRATELEIRA (Id),
FOREIGN KEY (Func_responsavel) REFERENCES FUNCIONARIO (Id)
);

CREATE TABLE COMPOE(
Id_prateleira INTEGER,
Id_setor INTEGER,
PRIMARY KEY (Id_prateleira),
FOREIGN KEY (Id_prateleira) REFERENCES PRATELEIRA (Id),
FOREIGN KEY (Id_setor) REFERENCES SETOR (Id)
);

CREATE TABLE SETOR_DE(
Nome_genero CHAR (50),
Id_setor INTEGER,
PRIMARY KEY (Id_setor),
FOREIGN KEY (Nome_genero) REFERENCES GENERO (Nome),
FOREIGN KEY (Id_setor) REFERENCES SETOR (Id)
);

CREATE TABLE ESCREVE_LIVROS_DE(
Nome_genero CHAR (50),
Id_autor INTEGER,
PRIMARY KEY (Nome_genero, Id_autor),
FOREIGN KEY (Nome_genero) REFERENCES GENERO (Nome),
FOREIGN KEY (Id_autor) REFERENCES AUTOR (Id)
);

CREATE TABLE ESCRITO_POR(
Id_livro INTEGER,
Id_autor INTEGER,
PRIMARY KEY (Id_livro, Id_autor),
FOREIGN KEY (Id_livro) REFERENCES LIVRO (Id),
FOREIGN KEY (Id_autor) REFERENCES AUTOR (Id)
);

CREATE TABLE LIVRO_DE(
Id_livro INTEGER,
Nome_genero INTEGER,
PRIMARY KEY (Id_livro, Id_genero),
FOREIGN KEY (Id_livro) REFERENCES LIVRO (Id),
FOREIGN KEY (Nome_genero) REFERENCES GENERO (Nome)
);

CREATE TABLE ENCOMENDA_DE(
Id_livro INTEGER,
Id_fornecedor INTEGER,
Id_func_adm INTEGER,
PRIMARY KEY (Id_livro, Id_fornecedor),
FOREIGN KEY (Id_livro) REFERENCES LIVRO (Id),
FOREIGN KEY (Id_fornecedor) REFERENCES FORNECEDOR (Id),
FOREIGN KEY (Id_func_adm) REFERENCES FUNC_ADMINISTRADOR (Id)
);

CREATE TABLE REGISTRA(
Reg_cliente INTEGER,
Id_func_ajd INTEGER,
PRIMARY KEY (Id_func_ajd),
FOREIGN KEY (Reg_cliente) REFERENCES CLIENTE (Registro),
FOREIGN KEY (Id_func_ajd) REFERENCES FUNC_AJUDANTE (Id)
);

CREATE TABLE REQUER_AJUDA(
Reg_cliente INTEGER,
Id_func_ajd INTEGER,
PRIMARY KEY (Reg_cliente),
FOREIGN KEY (Reg_cliente) REFERENCES CLIENTE (Registro),
FOREIGN KEY (Id_func_ajd) REFERENCES FUNC_AJUDANTE (Id)
);
